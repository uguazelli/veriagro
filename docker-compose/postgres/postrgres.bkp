-- üß® DROP ALL (correct dependency order)
DROP TABLE IF EXISTS mqtt_topics;
DROP TABLE IF EXISTS mqtt_credentials;
DROP TABLE IF EXISTS sensor_data;
DROP TABLE IF EXISTS sensors;
DROP TABLE IF EXISTS devices;
DROP TABLE IF EXISTS users;

-- üë§ USERS
CREATE TABLE users (
    id UUID PRIMARY KEY,
    email TEXT UNIQUE NOT NULL,
    password TEXT NOT NULL,
    role TEXT DEFAULT 'user',
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT now()
);

-- üìü DEVICES
CREATE TABLE devices (
    id UUID PRIMARY KEY,
    user_id UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    name TEXT NOT NULL,
    model TEXT,
    serial_number TEXT UNIQUE,
    last_seen TIMESTAMP WITHOUT TIME ZONE,
    registered_at TIMESTAMP WITHOUT TIME ZONE DEFAULT now()
);

-- üîê MQTT CREDENTIALS
CREATE TABLE mqtt_credentials (
    id UUID PRIMARY KEY,
    device_id UUID NOT NULL UNIQUE REFERENCES devices(id) ON DELETE CASCADE,
    mqtt_username TEXT UNIQUE NOT NULL,
    mqtt_password_hash TEXT NOT NULL,
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT now()
);

-- üì° MQTT TOPICS
CREATE TABLE mqtt_topics (
    id UUID PRIMARY KEY,
    device_id UUID NOT NULL REFERENCES devices(id) ON DELETE CASCADE,
    topic TEXT NOT NULL,
    direction TEXT CHECK (direction IN ('publish', 'subscribe')) NOT NULL,
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT now()
);

-- üß™ SENSORS
CREATE TABLE sensors (
    id UUID PRIMARY KEY,
    device_id UUID NOT NULL REFERENCES devices(id) ON DELETE CASCADE,
    name TEXT,
    type TEXT,
    model TEXT,
    manufacturer TEXT,
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT now()
);

-- üìà SENSOR DATA
CREATE TABLE sensor_data (
    id UUID PRIMARY KEY,
    sensor_id UUID NOT NULL REFERENCES sensors(id) ON DELETE CASCADE,
    unit TEXT,
    value REAL NOT NULL,
    timestamp TIMESTAMP WITHOUT TIME ZONE DEFAULT now()
);
